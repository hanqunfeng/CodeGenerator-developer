<?xml version="1.0" ?>

<project name="codeGenerator" default="jar" basedir=".">

	<echo message="codeGenerator ant begin" />
	<!-- 开发代码路径 -->
	<property name="src.dir" location="src" />
	<!-- 构建路径 -->
	<property name="build.dir" location="build" />
	<!-- 开发lib包路径 -->
	<property name="compile.lib.dir" location="lib" />
	<!-- 开发代码编译路径 -->
	<property name="compile.classes.dir" location="${build.dir}/classes" />
	<!-- 报告路径 -->
	<property name="reports.dir" location="reports" />

	<!-- javadoc路径 -->
	<property name="reports.javadoc.dir" location="${reports.dir}/javadoc" />
	<!-- main class路径 例如：my.path.to.the.main.Application -->
	<property name="main-class" value="GeneratorJFrame" />
	<!-- jar包名称 -->
	<property name="jar.name" value="generator.jar" />




	<!-- compile.classpath -->
	<path id="compile.classpath">
		<fileset dir="${compile.lib.dir}" includes="*.jar" />
	</path>


	<!-- 初始化 -->
	<target name="init" depends="delete" description="init run">
		<echo message="init run" />
		<mkdir dir="${compile.classes.dir}" />
		<echo message="init completed!" />
	</target>

	<!-- 初始化前的清理工作 -->
	<target name="delete" description="delete run">
		<echo message="delete run" />
		<delete dir="${build.dir}" />
		<echo message="delete completed!" />
	</target>

	<!-- 开发代码编译 -->
	<target name="compile" depends="init" description="compile run">
		<echo message="compile run" />
		<sleep seconds="2" />
		<javac source="1.6" srcdir="${src.dir}" destdir="${compile.classes.dir}" encoding="utf-8" debug="true">
			<classpath refid="compile.classpath" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>

		<copy todir="${compile.classes.dir}">
			<fileset dir="${src.dir}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>
		<echo message="Compile completed!" />
	</target>



	<!-- 打jar包 -->
	<target name="jar" depends="compile" description="Create jar and MANIFEST.MF">
		<!-- create a property containing all .jar files, prefix lib/, and seperated with a space -->
		<pathconvert property="libs.project" pathsep=" ">
			<mapper>
				<chainedmapper>
					<!--  remove absolute path  -->
					<flattenmapper />
					<!--  add lib/ prefix  -->
					<globmapper from="*" to="lib/*" />
				</chainedmapper >
			</mapper >
			<path refid="compile.classpath" />			         
		</pathconvert >
		<!--  create the jar  -->
		<jar jarfile="${build.dir}/${jar.name}" basedir="${compile.classes.dir}">
			<!--  define MANIFEST.MF  -->
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${main-class}" />
				<!--  finally, use the magically generated libs path  -->
				<attribute name="Class-Path" value="${libs.project}" />
			</manifest >
		</jar >
	</target >





	<!-- 生成javadoc -->
	<target name="javadoc" depends="compile" description="javadoc run">
		<echo message="javadoc run" />
		<delete dir="${reports.javadoc.dir}" />
		<mkdir dir="${reports.javadoc.dir}" />
		<javadoc sourcepath="${src.dir}" destdir="${reports.javadoc.dir}" encoding="UTF-8" charset="UTF-8" docencoding="UTF-8" author="true" version="true" use="true" access="private" linksource="true" windowtitle="${ant.project.name} API">
			<classpath>
				<path refid="compile.classpath" />
				<pathelement path="${compile.classes.dir}" />
			</classpath>
			<doctitle>
				<![CDATA[<H1>${ant.project.name}</H1>]]></doctitle>
		<bottom>
			<![CDATA[<i>Copyright &#169; 2010  All Rights Reseverd.</i>]]></bottom>

</javadoc>

<echo message="javadoc completed!" />
</target>

	
</project>
